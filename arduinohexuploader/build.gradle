apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}


afterEvaluate {
    assembleDebug.finalizedBy(exportJar)
}

task exportJar(type: Copy) {
    from('build/intermediates/packaged-classes/debug/classes.jar')
    include('classes.jar')
    into('../../../../Unity/arduino hex upload test/Assets/Plugins')
    rename('classes.jar', 'arduinohexuploader.jar')
}
task deleteOldJar(type: Delete) {
    delete '../../../../Unity/arduino hex upload test/Assets/Plugins/arduinohexuploader.jar'
}

// test
task fatJarTest(type: Jar) {
    from (zipTree('libs/jSerialComm-2.5.2.jar'))
    from (zipTree('libs/ArduinoHexUploadPlugin.jar'))
    from ('build/intermediates/classes/release/') {
        exclude '**android/'
        exclude '**/BuildConfig.class'
        exclude '**/R$*.class'
        exclude '**/R.class'
    }
}
exportJar.dependsOn(deleteOldJar)